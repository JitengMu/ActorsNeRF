category: 'actorsnerf'


##############################################3
## Network Specs

# modules
network_module: 'core.nets.actorsnerf.network'
trainer_module: 'core.train.trainers.trainer'
lr_updater_module: 'core.train.trainers.lr_updaters.exp_decay'
optimizer_module: 'core.train.optimizers.optimizer'

# positional embedder
embedder:
  module: "core.nets.actorsnerf.embedders.fourier"

non_rigid_embedder:
  module: "core.nets.actorsnerf.embedders.hannw_fourier"

# rendering network
canonical_mlp:
  module: 'core.nets.actorsnerf.rendering_network.rendering_network'
  mlp_depth: 8         # layers in network
  mlp_width: 256       # channels per layer
  multires: 10         # log2 of max freq for positional encoding (3D location)
  i_embed: 0           # set 0 for default positional encoding, -1 for none

# motion weights volume
mweight_volume:
  module: 'core.nets.actorsnerf.mweight_vol_decoders.category_level_mweight_volume'
  embedding_size: 256
  volume_size: 32
  dst_voxel_size: 0.0625

# deformation network
non_rigid_motion_mlp:
  module: 'core.nets.actorsnerf.deformation_network.deformation_network'
  condition_code_size: 69
  mlp_width: 128
  mlp_depth: 6
  skips: [4]
  multires: 6       # log2 of max freq for positional encoding (3D location)
  i_embed: 0        # set 0 for default positional encoding, -1 for none
  kick_in_iter: 10000
  full_band_iter: 50000

# encoder
encoder:
  module: 'core.nets.actorsnerf.encoder.encoder'
  encoder_arch: 'resnet_18_concat'
  encoder_feat_dims: 256

# sparse_conv_net
sparse_conv_net:
  module: 'core.nets.actorsnerf.sparse_conv.sparse_conv_net'

##############################################3
## Data Configuration

train_keyfilter: ['rays', 'target_rgbs',
                  'motion_bases', 'motion_weights_priors',
                  'cnl_bbox', 'dst_posevec_69']
test_keyfilter: ['rays', 'target_rgbs', 
                 'motion_bases', 'motion_weights_priors',
                  'cnl_bbox', 'dst_posevec_69']

train:
  perturb: 1.        # only for training, set to 0. for no jitter, 1. for jitter
  batch_size: 1
  shuffle: True
  drop_last: False
  maxiter: 400000
  lr: 0.0005  # 5e-4
  lr_mweight_vol_decoder: 0.00005 # 5e-5
  lr_pose_decoder: 0.00005        # 5e-5
  lr_non_rigid_mlp: 0.00005       # 5e-5
  lrate_decay: 500
  optimizer: 'adam'
  log_interval: 20
  save_checkpt_interval: 2000
  save_model_interval: 50000
  ray_shoot_mode: 'patch'
  lossweights:
    lpips: 1.0
    mse: 1.0
#    flow: 1.0
#    alpha_delta: 1.0
#    xyz_cycle: 1.0

multiview:
  batch_size: 1
  shuffle: False
  drop_last: False

progress:
  batch_size: 1
  shuffle: False
  drop_last: False
  dump_interval: 5000

movement:
  batch_size: 1
  shuffle: False
  drop_last: False

eval_freeview:
  batch_size: 1
  shuffle: False
  drop_last: False
  frame_idx: 0

tpose:
  batch_size: 1
  shuffle: False
  drop_last: False

eval_novel_view:
  batch_size: 1
  shuffle: False
  drop_last: False

eval_novel_pose:
  batch_size: 1
  shuffle: False
  drop_last: False

eval_pose_transfer:
  batch_size: 1
  shuffle: False
  drop_last: False

vis_mesh:
  batch_size: 1
  shuffle: False
  drop_last: False


##############################################3
## Misc

sex: 'neutral'
total_bones: 24
bbox_offset: 0.3

load_net: latest
load_cate_net: ""
save_all: True    # save all checkpoints

patch:
  sample_subject_ratio: 0.8
  N_patches: 6
  size: 32      # [Patch] size of patch

N_samples: 128      # number of samples for each ray in coarse ray matching

perturb: 1.        # only for training, set to 0. for no jitter, 1. for jitter

netchunk_per_gpu: 300000 # number of pts sent through network in parallel, decrease if running out of memory
chunk: 32768   # 32768=1024*32, number of rays processed in parallel, decrease if running out of memory
n_gpus: 1

show_alpha: False  
show_truth: False

voxel_size: [0.005, 0.005, 0.005]
